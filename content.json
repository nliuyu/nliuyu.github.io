{"meta":{"title":"刘宇的个人网站","subtitle":"刘宇的小窝","description":"千里之行，始于足下","author":"刘宇","url":"https://liuyu.biz","root":"/"},"pages":[{"title":"关于我","date":"2022-01-16T04:58:56.000Z","updated":"2022-01-16T14:05:25.147Z","comments":false,"path":"about/index.html","permalink":"https://liuyu.biz/about/index.html","excerpt":"","text":"刘宇de小窝 武汉计算机学生一枚 喜爱动漫 编程、音乐、跑步 联系我QQ：753000980 (Entropy) 座右铭：理论是灰色的 生命之树常青"},{"title":"留言板","date":"2020-10-31T02:11:28.000Z","updated":"2021-11-23T10:50:01.880Z","comments":false,"path":"comments/index.html","permalink":"https://liuyu.biz/comments/index.html","excerpt":"","text":""},{"title":"archives","date":"2019-10-24T16:00:00.000Z","updated":"2021-06-27T12:40:24.587Z","comments":true,"path":"archives/index.html","permalink":"https://liuyu.biz/archives/index.html","excerpt":"","text":""},{"title":"分类","date":"2020-11-24T07:12:19.000Z","updated":"2021-07-26T14:44:28.785Z","comments":false,"path":"categories/index.html","permalink":"https://liuyu.biz/categories/index.html","excerpt":"","text":""},{"title":"link","date":"2022-01-16T12:08:04.000Z","updated":"2022-01-16T12:08:04.602Z","comments":true,"path":"link/index-1.html","permalink":"https://liuyu.biz/link/index-1.html","excerpt":"","text":""},{"title":"友情链接","date":"2018-06-07T14:17:49.000Z","updated":"2022-01-13T01:37:08.001Z","comments":true,"path":"link/index.html","permalink":"https://liuyu.biz/link/index.html","excerpt":"","text":""},{"title":"我的歌单","date":"2019-05-17T08:14:00.000Z","updated":"2021-07-26T13:06:52.537Z","comments":true,"path":"music/index.html","permalink":"https://liuyu.biz/music/index.html","excerpt":"","text":""},{"title":"nnn","date":"2022-05-13T19:08:35.000Z","updated":"2022-05-13T19:08:35.324Z","comments":true,"path":"nnn/index.html","permalink":"https://liuyu.biz/nnn/index.html","excerpt":"","text":""},{"title":"标签","date":"2020-11-24T07:14:39.000Z","updated":"2021-07-26T14:44:42.337Z","comments":false,"path":"tags/index.html","permalink":"https://liuyu.biz/tags/index.html","excerpt":"","text":""},{"title":"page","date":"2022-05-13T19:12:02.000Z","updated":"2022-05-13T19:12:02.403Z","comments":true,"path":"page/index.html","permalink":"https://liuyu.biz/page/index.html","excerpt":"","text":""},{"title":"","date":"2019-08-10T08:41:10.000Z","updated":"2022-01-13T12:11:31.846Z","comments":false,"path":"List/movies/index.html","permalink":"https://liuyu.biz/List/movies/index.html","excerpt":"","text":"终其一生 满是遗憾 耳机入耳的时刻就是逃离人群的时刻"},{"title":"Music-BBOX","date":"2020-04-23T04:58:56.000Z","updated":"2022-01-03T10:27:54.756Z","comments":false,"path":"List/music/index.html","permalink":"https://liuyu.biz/List/music/index.html","excerpt":"","text":""}],"posts":[{"title":"字典与集合的总结（持续更新中）","slug":"字典与集合的总结","date":"2022-10-27T13:31:39.000Z","updated":"2022-10-27T14:40:25.711Z","comments":true,"path":"posts/5d43f4f8.html","link":"","permalink":"https://liuyu.biz/posts/5d43f4f8.html","excerpt":"","text":"1. 总述第五章的课程结束了，以下内容总结了课本上这一章的重点知识： 2. 字典2.1 创建字典1) 直接创建字典 通过大括号的形式将若干“键值对”放在一起 {键1:值1,键2:值2,……} 2) 使用内置函数dict()创建字典 例如我们可以先写出列表之后将其转化为字典，方式如下： items=[('俄罗斯',1707.5)] dic=dict(items) 以上程序就会生成一个dic={‘俄罗斯’:1707.5}的字典 注意： 1.键具有唯一性，字典中不允许出现相同的键(但是不同的键可以有相同的值） 2.键必须是不可变的类型，如列表就不可以作为键 3) 先定义一个空字典，之后添加dict={} dict['俄罗斯']=1707.5 2.2 访问字典 访问字典是通过键这个索引来访问值 举例如下： dic={'俄罗斯':1707.5} print(dic['俄罗斯']) 最后我们可以看到会输出俄罗斯这个键在字典里所对应的值1707.5 2.3 更新字典 在字典创建之后通过字典名[键]=值的方法进行更新，如果键在字典中不存在就会执行添加条目的操作，如果存在就会执行修改条目 2.4 删除字典条目1) del命令 del 字典名 整个字典全部删除 del 字典名[键]删掉字典中该键队对应的条目 2) pop()方法 pop(键) 会弹出指定的键对应的值，并删掉对应的条目 pop(键,默认值(如：找不到删除的条目)) 区分于get()方法:后者并不会删掉条目 3) popitem()方法 会随机删除字典中的一个条目 那么问题来了如果删到字典没有条目了还会继续吗？答案是并不会，如下： 4) clear()方法清空字典中的所有条目，但并不会删掉字典本身的结构。 2.5 查找字典条目1) 运算符in略 2) get()方法 get(键,默认值) 应用：利用get(键,0)+1可以用于统计字符出现次数，如下： 2.6 遍历字典1) keys()方法 可以遍历字典中所有的键 2) values()方法 可以遍历字典中所有的值 3) items()方法 以(键,值)的形式返回所有的条目 2.7 字典的排序 sorted()方法 代码暂时略 2.8 合并字典1) for循环 结合items()方法,利用k、v两个变量遍历被合并的字典再添加进需要合并的字典 2) update()方法 需要合并的字典名.update(被合并的字典名) 3) dict()函数 先将其转为两个列表后合并为一，再用dict()函数转为字典 dic=dict(duc1,**dic2) 注意：字典的键唯一，那么问题来了：两个字典具有相同的键但值不同，在合并之后会是怎样的呢？ 键对应的值为被合并字典的值（如下） 3. 集合 集合互斥且唯一，因此可以帮助我们删掉重复的元素 集合的元素必须是不可变的就和字典的键一样，因此列表不可以充当元组中的元素 3.1 创建集合1) 直接创建 {元素1,元素2,…} 2） set()函数创建 括号内为字符串，会将字符串去重后让字符变成元素 括号内为列表，会将列表去重后使其元素变成集合的元素 括号内为空，会创建一个空集合 注意：不可以用{}的方式创建空集合，因为这样创建后的类型为字典 3.2 集合的基本操作1) 增 add()方法 update()方法 注意：增添之后会自动去除重复的元素 2) 删 remove()方法 S.remove(item)将指定元素item从集合S中删掉，若不存在元素item将会报错 discard()方法 S.discard(item)将指定元素item从集合S中删掉，若不存在元素item系统正常执行 pop()方法 随机删除并返回一个元素 clear()方法 清空集合所有元素 3) 查运算符in 4) 数学运算 并集 A|B or A.union(B) 交集 A&amp;B or A.intersection(B) 差集 A-B or A.difference(B) 对称差集A^B or A.symmetric_difference(B) 4.与C++中STL字典map/哈希表hash_map与集合set以及Java中的Map和Set使用方法的对比先空着，周末有空再更 5.在各种习题中的运用先空着，周末有空再更","categories":[],"tags":[]},{"title":"MyBatis框架的学习（更新中）","slug":"MyBatis框架的学习","date":"2022-10-25T12:12:19.000Z","updated":"2022-10-27T14:40:25.706Z","comments":true,"path":"posts/702709a0.html","link":"","permalink":"https://liuyu.biz/posts/702709a0.html","excerpt":"","text":"框架framework就是对通用代码的封装，提前写好了一些接口和类，一般以jar包的形式存在。 SSM三大框架的学习顺序:MyBatis, Spring, Spring MVC 数据访问层（持久层）Dao:对数据的增删改查 MyBatis就是增强版的JDBC JDBC的不足：1.sql语句写死了;2.Java语句繁琐 ORM:对象Object 关系Relation 映射Mapping MyBatis是一个半自动化的ORM，SQL语句需要程序员自己编写。 Hibernate是一个全自动化的ORM，SQL语句可以自动生成。 像User这样的类，有特殊的称呼：有人把它叫做pojo（普通java类）,有的叫做javabean（咖啡豆）,有的叫做domain（领域模型）","categories":[],"tags":[]},{"title":"js基础语法学习","slug":"js基础语法学习","date":"2022-09-20T12:59:23.000Z","updated":"2022-10-27T14:40:25.708Z","comments":true,"path":"posts/e0deaa88.html","link":"","permalink":"https://liuyu.biz/posts/e0deaa88.html","excerpt":"","text":"1.1 JS的调用方式与执行顺序使用方式HTML页面中的任意位置加上即可。 常见的使用方式有以下几种“ 直接在标签内写JS代码。 直接引入文件： &lt;script type=\"module\" src=\"/static/js/index.js\"&gt;&lt;/scipt&gt;。 将所需的代码通过import关键字引入到当前作用域。 例如： /static/js/index.js文件中的内容为： let name=\"cxk\"; function print(){ console.log(\"Hello World!\"); } export{ name, print } &lt;script type=\"module\"&gt;&lt;/script&gt;中的内容为： &lt;script type=\"module\"&gt; import {name, print } from \"/static/js/injdex.js\"; console.log(name); print(); &lt;/script&gt; 执行顺序 类似于HTML与CSS按从上到下的顺序执行； 事件驱动执行； HTML，CSS，JavaScript三者之间的关系 CSS控制HTML Javascript控制CSS与HTML 为了方便开发与维护，尽量按照上述顺序写代码。例如：不要在HTML中调用JavaScript的函数。 变量与运算符let与const用来声明变量，作用范围为当前作用域。 let用来定义变量； const用来定义常量； 例如： let s = \"cxk\", x = 5; let d = n{ name: \"xiuaoheizi\", age: 18, } const n = 100; 变量类型 number：数值变量，例如1,2.5 string：字符串，例如cxk，xiaoheizi，单引号与双引号均可。字符串中的每个字符为只读类型。 boolean：布尔值，例如true,false object：对象，类似于C++中的指针，例如[1,2,3]，{name:\"cxk\",age:18}，null undefined：未定义的变量 类似于Python，JavaScript中的变量类型可以动态变化。 运算符与C++、``Python`类似，不同点： **表示乘方 等于与不等于用===和!==","categories":[],"tags":[]},{"title":"数学建模比赛的学习记录","slug":"数学建模比赛的学习记录","date":"2022-09-07T08:23:58.000Z","updated":"2022-10-27T14:40:25.712Z","comments":true,"path":"posts/a87c26aa.html","link":"","permalink":"https://liuyu.biz/posts/a87c26aa.html","excerpt":"","text":"写这篇笔记的原因一个暑假被我摸鱼混过去了，今天上午老师要求阅读论文，作为leader的我却又摸鱼了一天，最后把讲解题目的任务都给了队友，这让我在看到其他队伍的leader都挑起了重担而我却在苟活，良心受到了巨大的谴责。 一开始我并不认为我需要学习数学建模，这个比赛混一混就够了，毕竟我还要学习很多专业课。但是我发现，我并没有拿出这个时间去好好学习任何东西，而是放在聊天、游戏以及刷视频上。 有些时候，给自己太多期望和安排，反而到了最后因为认为每一个都很重要都应该去做，反而最后就拖拖拉拉，以至于一个都没有完成。 因此不如给自己一个目标，也就是在数学建模比赛前期我至少要看完相关网课。 有些时候就是因为自认为自己坚持不下来，即使自己坚持下来了也不一定有用。那么我这次要认为自己一定能坚持学习得完，并且学习完了就一定能让我获奖!我一定要去做！ 人生就是要尝试挑战自己，让自己变得不一样。 一、如何查找 Just do what you gotta do！ 现在是16：49，我正在看如何准备数学建模。刚刚摸鱼了一分钟。不能再摸鱼啦！ 可以安装的几款软件1.Matlab 2.Mathpix：截图即可公式编辑 3.AxGlyph：学术绘图 不要学了几分钟，就认为自己学了好多，然后就放心大胆去玩几小时！！ 如何使用搜索引擎 通过高级检索搜索，关键词一般设置为模糊，例如搜索“神经网络”，模糊搜索出的结果就会包含“神经”或者“网络”。以便达达到搜索到的更多","categories":[],"tags":[]},{"title":"开启Djiago课程的学习","slug":"开启Djiago课程的学习","date":"2022-08-04T14:28:55.000Z","updated":"2022-08-08T18:34:05.952Z","comments":true,"path":"posts/359fc57.html","link":"","permalink":"https://liuyu.biz/posts/359fc57.html","excerpt":"","text":"一、Python3语法的学习1.准备工作我们先打开python3，之后创建一个名为python_lesson的文件夹；之后创建一个python文件。在python的第一行写上#!/usr/bin/env python3，第二行写上编码之后写上print(“Hello World”)于是在运行时就出现了。以上是其他的两种运行形式。 2.语法#： 注释（建议养成好习惯，空两格后加注释）作为计算器，在输入需要计算的内容后，会自动输出。（ipython3会高亮以及补全的信息会更多。）python中的除号默认是浮点数运算。两个除号是整除，两个乘号是乘方。Python的整除是向下取整，而C++是向0取整。python中可以直接定义变量。下划线_:取上一个的值。round可以用于保留小数。单引号与双引号都可以表示字符串，\\用于转义，如果不希望转义可以在前面补上r。三个双引号。自动拼接字符串。python的下标可以从左往右，也可以从右往左访问。切片，可以访问某个区间内的。如a[0:2]，就是从0-1。切片省略前后的输出。注意下标不能越界，但是切片可以，因为它会自动截断。与C++ 不同的是，python中的字符串不能修改，但是却可以增加。len函数：求python所有长度。（数据结构：list数组，set，dict字典类似map）数组是用中括号定义。并且数组十分灵活。和字符串一样，访问和切片完全相同，因此省略。如同指针，将a赋值给b后，修改a，b的值也会跟着修改。浅拷贝。 深拷贝，改a不改变b。增加元素。 切片也可以进行改变。通过改变切片的方法，我们可以将整个变成空串，从而清空数组。复合赋值。交换两个变量。 python所有循环后面需要加上冒号。python不需要大括号，它是通过缩进判断是否在循环体内。通过print的end修改可以将最后输出都为回车改为“，”。 二、Djiango的框架","categories":[],"tags":[]},{"title":"提升打字速度小技巧","slug":"提升打字速度小技巧","date":"2022-07-30T06:40:02.000Z","updated":"2022-07-30T08:36:51.441Z","comments":true,"path":"posts/f8192249.html","link":"","permalink":"https://liuyu.biz/posts/f8192249.html","excerpt":"","text":"一、英文1. 删除一整个单词通过Ctrl+Backspace可以实现； 与此同时，对于中文，我们也可以通过这种操作删除一个词。 2. 删除一整行单词Shift+Home可以选中一整行，因此我们可以通过Shift+Home+Backspace完成删除一整行的操作。 3. 训练（1）训练常用词10fastfigers.com （2）训练薄弱字母keybr.com 二、中文1. 偏盘部首辅助找字可以在输入拼音后加上Tab键输入偏旁部首。 2. Ctrl+首字母可以快速定位到该字母前方3. 启用u模式，通过偏旁部首组成生僻字4. 启用v模式，可以方便数字的使用和计算如v123可以快速输入繁体 5. 简拼rq 输入今天的日期 sq 输入现在星期几 sj 输入现在时间点 6. 固定首位7. 自定义快捷短语比如可以让字母输出标点符号 8. 美化输入法皮肤，提升效率","categories":[],"tags":[]},{"title":"配置Mysql与注册登录模块","slug":"配置Mysql与注册登录模块","date":"2022-07-29T09:10:43.000Z","updated":"2022-08-08T18:33:11.893Z","comments":true,"path":"posts/94f24848.html","link":"","permalink":"https://liuyu.biz/posts/94f24848.html","excerpt":"","text":"整个框架的模型工程就是对字符串的处理。 MySQL的安装与使用软件默认储存在了C盘的Program Files，数据储存在了Program Data。 cd “C:\\Program Files\\MySQL\\MySQL Server 8.0\\bin” 进入之后运行Mysql的命令mysql –version。 配置Path环境变量：我的电脑-属性-高级-环境变量-Path（上面的是当前用户，下面的是所有用户都能访问）-新建-将bin放进去-之后就可以在各个情况下使用mysql 。 注意：如果电脑上有多个mysql的版本需要在配置环境变量时将需要显示的那个的bin目录上移。 用管理员权限运行powershell后输入net stop mysql80就可以停止，输入net start mysql80启动服务。 登录自己的mysqlmysql -uroot -P端口号 -p密码 常用指令 show databases;create databases 名称;use 名称; 使用数据库drop 名称; 删除数据库 show tables; 显示表create table 名称（属性1 类型1,）； –常见的属性有id，用户名，密码；varchar需要在括号中加上长度drop table 名称; 删除表 insert into 名称 values(，‘’,‘’); –在想插入的表中插入数据select * from 名称; 查询数据select * from 名称 where 条件； 查询单个delete from 名称 where 条件; 删除 键盘上的上下方向键可以试试 连接数据库打开Idea，选择连接数据库，点击移出可以删除已有数据库，其中数据库填自己创建的，组建选择默认组建。测试连接成功后就可以在Idea中修改数据，其中点击+可以增加表中的数据，点击向上的箭头可以上传数据，点击刷新可以更新数据。点击新建列可以增加一列。 添加依赖在https://mvnrepository.com/（maven仓库）中搜索所需，添加到pom.xml的``中，之后点击最右侧的Maven选择刷新。 &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-jdbc&lt;/artifactId&gt; &lt;version&gt;2.7.1&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.projectlombok&lt;/groupId&gt; &lt;artifactId&gt;lombok&lt;/artifactId&gt; &lt;version&gt;1.18.24&lt;/version&gt; &lt;scope&gt;provided&lt;/scope&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;mysql&lt;/groupId&gt; &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt; &lt;version&gt;8.0.29&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;com.baomidou&lt;/groupId&gt; &lt;artifactId&gt;mybatis-plus-generator&lt;/artifactId&gt; &lt;version&gt;3.5.3&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;com.baomidou&lt;/groupId&gt; &lt;artifactId&gt;mybatis-plus-boot-starter&lt;/artifactId&gt; &lt;version&gt;3.5.2&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-security&lt;/artifactId&gt; &lt;version&gt;2.7.1&lt;/version&gt; &lt;/dependency&gt; application.propeties在application.properities中添加serve.port=3000 spring.datasource.username=root spring.datasource.password=123456 spring.datasource.url=jdbc:mysql://localhost:3306/kob?serverTimezone=Asia/Shanghai&amp;useUnicode=true&amp;characterEncoding=utf-8 spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver 解决空的中间软件包被自动压缩的问题点击设置-树外观，关闭压缩空的中间软件包。 SpringBoot中常用文件夹概念pojo层将数据库中的table直接翻译成Java中的class在pojo中加入User这个类 mapper层将class里的增删改查（crud）转换成sql语句在mapper中添加类UserMapper，我们通过使用MyBatis-plus可以避免使用sql语句。 service层实现具体业务。 controller层调度service层。最后的是返回查询所有用户。在MyBatis-Plus官网中我们可以查询到返回所有用户。封装条件构造器QueryWrapper，可以调用api。 实现范围遍历ge是大于等于，le是小于等于;gt是大于，lt是等于。如上图是一个错误的示范，只返回了一个，然而这个范围却不止一个。正确的如下：（将One改为List） 插入一条数据通过post实现如下(@PathVariable是spring3.0的一个新功能：接收请求路径中占位符的值) 删除数据 userController其中@RequestMapping可以映射所有的，除此之外还有@GetMapping和@PostMapping。 target中就是编译完后的结果配置授权机制（用户安全）在Maven仓库中添加完相关依赖后，再次打开原来的页面会显示一个登陆窗口:默认用户名是user，密码会每次编译后自动生成/logout是退出页面 不再使用默认登陆键盘上的alt+insert键可以快速插入 session数据库里会存sessionID是谁。如果使用数据库一定要加上Autowired在密码前加上{noop}让数据库知道并未加密 加密encode 将明文转化为密文matches 判断明文与密文是否匹配我们在test类中进行加密，加密后的密文会出现在这里 接下来我们可以通过matches判断是否匹配如果在这里显示true就是匹配，false就是不匹配。这个时候，我们再回到登陆页面只能通过密文进行登陆。为了解决这种问题，我们可以将数据库中的password改为对应的密文。之后我们设置自动生成密文……","categories":[],"tags":[]},{"title":"开启游戏平台","slug":"开启游戏平台","date":"2022-07-15T10:13:21.000Z","updated":"2022-07-30T08:36:51.442Z","comments":true,"path":"posts/8ae62c4e.html","link":"","permalink":"https://liuyu.biz/posts/8ae62c4e.html","excerpt":"","text":"选择依赖项 ： SpringWeb、Thymeleaf 127.0.0.1:8080(http://localhost:8080/) 在后端中新建一个软件包：controller 在IndexController加一个注解@Controller 加一个父目录@RequestMapping 注意加上/,网站是http://127.0.0.1:8080/pk/index/ 在resources的 在static里存Image 以上是前后端不分离的写法，返回的是html页面 如果前后端分离，返回的是一个类 后端分离的写法增加一个映射@RequestMapping public List&lt;String&gt; getBotInfo() { List&lt;String&gt;list=new LinkedList&lt;&gt;(); list.add(\"sword\"); list.add(\"tiger\"); list.add(\"apple\"); return list; } } public Map&lt;String,String&gt; getBotInfo() { Map&lt;String,String&gt; map = new HashMap&lt;&gt;(); map.put(\"name\",\"tiger\"); map.put(\"rating\",\"1500\"); return map; } } (注意方法的返回) public List&lt;Map&lt;String,String&gt;&gt; getBotInfo() { List&lt;Map&lt;String,String&gt;&gt; list = new LinkedList&lt;&gt;(); Map&lt;String,String&gt; bot1 = new HashMap&lt;&gt;(); bot1.put(\"name\",\"tiger\"); bot1.put(\"rating\",\"1500\"); Map&lt;String,String&gt; bot2 = new HashMap&lt;&gt;(); bot2.put(\"name\",\"apple\"); bot2.put(\"rating\",\"1800\"); list.add(bot1); list.add(bot2); return list; } } 前端vue ui 之后安装两个插件和两个依赖（jqueiry和bootstrap） 任务 —&gt; serve —&gt; 运行 去掉#在router的Index里将Hash几个字去掉 vue每一个vue都有三个：(html) （js） （css） type类型 get和post, 图片下载路径D:\\kob\\web\\src\\assets &lt;template> &lt;div> &lt;div>Bot昵称:&#123;&#123;bot_name&#125;&#125;&lt;/div> &lt;div>Bot战力:&#123;&#123;bot_rating&#125;&#125;&lt;/div> &lt;/div> &lt;router-view/> &lt;/template> &lt;script> import $ from 'jquery'; import &#123; ref &#125; from 'vue'; export default &#123; name: \"APP\", setup: ()=>&#123; let bot_name = ref(\"\"); let bot_rating = ref(\"\"); $.ajax(&#123; url: \"http://127.0.0.1:8080/pk/getbotinfo/\", type: \"get\", success:resp=>&#123; bot_name.value = resp.name; bot_rating.value = resp.rating; &#125; &#125;); return &#123; bot_name, bot_rating &#125; &#125; &#125; &lt;/script> &lt;style> body &#123; background-image: url(\"@/assets/background.png\"); background-size: cover &#125; &lt;/style> 在BootStrap中的NavBar找到喜欢的样式 light-dark互相修改 通过active控制聚焦 需要的页面1.PK 2.Record 3.Ranklist 4.User Bot 5.404 防止跳转时刷新，将换成 公共的组建 container是一个自适应大小的容器 div.container>div.card>div.card-body user 多一层目录，所以是 from ‘../../../components/ContentField.vue’ 显示聚焦首先需要取得当前是什么页面 选中一个地方后按alt键就会有两个光标一块写了 冒号是v-bind的简写 设计这个游戏import是否需要用到大括号有default不用加大括号（export相当于java中的public）","categories":[],"tags":[]},{"title":"markdown常用语法","slug":"markdown常用语法","date":"2022-07-15T10:08:24.000Z","updated":"2022-07-30T08:36:51.440Z","comments":true,"path":"posts/dc49ce92.html","link":"","permalink":"https://liuyu.biz/posts/dc49ce92.html","excerpt":"","text":"Markdown基本语法1.标题在想要设置为标题的文字前面加#来表示一个#是一级标题，两个#是二级标题，以此类推。支持六级标题，标题字号逐级递减降低注：标准语法在#后跟个空格再写文字示例： # 这是一级标题 ## 这是二级标题 ### 这是三级标题 #### 这是四级标题 ##### 这是五级标题 ###### 这是六级标题 效果如下 这是一级标题这是二级标题这是三级标题这是四级标题这是五级标题这是六级标题2.字号加粗要加粗的文字左右分别用两个 * 号包起来斜体要倾斜的文字左右分别用一个 * 号包起来斜体加粗要倾斜和加粗的文字左右分别用三个 * 号包起来删除线要加删除线的文字左右分别用两个~~号包起来 示例 **这是加粗的文字** *这是倾斜的文字* ***这是斜体加粗的文字*** ~~这是加删除线的文字~~ 效果如下：这是加粗的文字这是倾斜的文字这是斜体加粗的文字这是加删除线的文字 3.分割线三个或者三个以上的-或者*都可以示例： --- *** 效果如下： 引用在需要引用的文字前加&gt;即可示例 &gt;这是需要引用的文字 这是需要引用的文字 5.图片![图片下方显示名字](图片url “鼠标放在图片上的显示信息”) 7.列表无序列表在内容前面加上*，+，或者-（注意空格） * 无序列表 + 无序列表 - 无序列表 有序列表数字加上.（后面还是要空格） 1. 有序列表 有序列表 8.表格 表头 表头 表头 内容 内容 内容 内容 内容 内容 第二行分割表头和内容。 - 有一个就行 -左边加：表示文字居左 -两边加：表示文字居中 -右边加：表示文字居右 注：原生的语法两边都要用 | 包起来。此处省略 示例：学号|姓名|年龄:-|:-:|-:123|456|789 9. 代码插入单行代码 单行代码 多行代码 多行代码 10.插入视频或音乐 11.文字（1）缩进在缩进前的文字使用 &amp;emsp;示例 我被缩进啦 （2）居中markdown支持html语法，因此可以用&lt;center&gt; &lt;/center&gt;实现居中， 居中啦 （3）字体和颜色font face 字体font size 大小font color 颜色以上可以嵌套使用你好 12.图片大小和位置众所周知，html语法很简单，md也支持。 通过 center 居中 ，把center换成 left 和 right 可以实现居左或者居右width 和 height 调控高度和宽度 &lt;div align=\"center\"&gt; &lt;img src=\"https://img-blog.csdnimg.cn/20200507103002365.png\" width = 30% height = 20% /&gt; &lt;/div&gt;","categories":[],"tags":[]},{"title":"配置git环境与项目创建","slug":"配置git环境与项目创建","date":"2022-07-13T16:08:25.000Z","updated":"2022-07-30T08:36:51.444Z","comments":true,"path":"posts/881ff15a.html","link":"","permalink":"https://liuyu.biz/posts/881ff15a.html","excerpt":"","text":"起步首先进入终端,输入cd进入家目录。通过ssh-keygen生成密钥，一路回车。 cd .ssh 进入ssh文件夹，输入ls，可以看到两个文件：公钥和私钥。通过cat + 私钥名称就可以点开。将密钥复制至ssh密钥后传到acgit。 在电脑上创建个目录后输入命令git init，会生成一个隐藏文件夹 .git,同时在其中创建一个readme文件 输入常用的git命令 （git + 含义）git status 查看当前文件夹下有多少文件未被收录到仓库 git add . 将未收录的给收录了 git commit -m “创建项目（命名）” 为这段有纪念价值的命令取个亲切的名字吧~之后可以通过历史查看，同时也可以在其中浏览文件获取历史版本 git push 上传云端（执行此命令前需要同步） git pull 将另一台电脑的代码给同步下来 同步云端项目创建项目–创建空白项目–………–将命令复制粘贴(可以用shift+insert键)（如果有多个项目，两个都要去掉–global）–推送现有文件夹（选第三个和第五个（将main换成master）） * 如何将两个电脑代码同步进入项目后点击克隆，复制ssh克隆命令，打开需要克隆的文件夹，输入git命令git clone + 复制","categories":[],"tags":[]},{"title":"开启SpringBoot的入门学习","slug":"开启SpringBoot的入门学习","date":"2022-06-17T13:29:03.000Z","updated":"2022-06-17T15:09:40.075Z","comments":true,"path":"posts/33b430d3.html","link":"","permalink":"https://liuyu.biz/posts/33b430d3.html","excerpt":"","text":"还在学习中，我会在期末考试完成后一直更新的。","categories":[{"name":"个人学习","slug":"个人学习","permalink":"https://liuyu.biz/categories/%E4%B8%AA%E4%BA%BA%E5%AD%A6%E4%B9%A0/"}],"tags":[{"name":"SpringBoot","slug":"SpringBoot","permalink":"https://liuyu.biz/tags/SpringBoot/"}]},{"title":"开启VUE的学习记录","slug":"开启VUE的学习记录","date":"2022-06-17T13:28:32.000Z","updated":"2022-06-17T15:09:40.075Z","comments":true,"path":"posts/708b490e.html","link":"","permalink":"https://liuyu.biz/posts/708b490e.html","excerpt":"","text":"还在学习中，我会在期末考试完成后一直更新的。常用指令v-textv-htmlv-onv-showv-ifv-bindv-onv-model","categories":[{"name":"个人学习","slug":"个人学习","permalink":"https://liuyu.biz/categories/%E4%B8%AA%E4%BA%BA%E5%AD%A6%E4%B9%A0/"}],"tags":[{"name":"VUE","slug":"VUE","permalink":"https://liuyu.biz/tags/VUE/"}]},{"title":"针对JAVA期末课设的学习记录","slug":"针对JAVA期末课设的学习记录","date":"2022-06-14T18:57:32.000Z","updated":"2022-06-20T07:16:35.330Z","comments":true,"path":"posts/a425977c.html","link":"","permalink":"https://liuyu.biz/posts/a425977c.html","excerpt":"","text":"准备前端 Vue2[vue的学习记录(更新中)](开启VUE的学习记录 | 刘宇的个人博客) element-ui bootstrap5 axios 后端 springboot2SpringBoot的学习记录 mybatis-plus Gson 数据库 mysql 开发工具 社区版idea vs code 实现后端增删改查 首先我们新建一个文件夹，通过cmd输入命令 vue create front(为前端项目命名为”front”)，选择vue2。在创建vue的同时，我们可以在这段时间创建数据库，登陆msql之后，source + 数据库的路径可以将之前设计好的数据库拖过来。 之后我们打开Idea,选择new project - &gt; 点击next- &gt; 选择Maven - &gt; 选择新建的文件夹路径\\back(为前端项目命名为”back”) 在maven的pom.xml文件中引入依赖后刷新maven &lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt; &lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt; &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt; &lt;groupId&gt;org.example&lt;/groupId&gt; &lt;artifactId&gt;mybatis_plus01&lt;/artifactId&gt; &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt; &lt;properties&gt; &lt;maven.compiler.source&gt;8&lt;/maven.compiler.source&gt; &lt;maven.compiler.target&gt;8&lt;/maven.compiler.target&gt; &lt;/properties&gt; &lt;parent&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt; &lt;version&gt;2.6.7&lt;/version&gt; &lt;relativePath/&gt; &lt;/parent&gt; &lt;dependencies&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter&lt;/artifactId&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt; &lt;scope&gt;test&lt;/scope&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;com.baomidou&lt;/groupId&gt; &lt;artifactId&gt;mybatis-plus-boot-starter&lt;/artifactId&gt; &lt;version&gt;3.5.1&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.projectlombok&lt;/groupId&gt; &lt;artifactId&gt;lombok&lt;/artifactId&gt; &lt;optional&gt;true&lt;/optional&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;mysql&lt;/groupId&gt; &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt; &lt;scope&gt;runtime&lt;/scope&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;com.google.code.gson&lt;/groupId&gt; &lt;artifactId&gt;gson&lt;/artifactId&gt; &lt;version&gt;2.8.5&lt;/version&gt; &lt;/dependency&gt; &lt;/dependencies&gt; &lt;/project&gt; 在source下创建一个文件（file）,重命名为”application.yaml” spring: datasource: username: root password: '123456' url: jdbc:mysql://127.0.0.1:3306/demo3?characterEncoding=UTF-8&amp;serverTimezone=UTC driver-class-name: com.mysql.cj.jdbc.Driver 写法很固定，username和password分别是用户名和密码（注意打上单引号），url中加上数据库。 接下来在java下新建一个包”org.example.Application”，最后就会创建出一个Application类作为启动类 package org.example; import org.mybatis.spring.annotation.MapperScan; import org.springframework.boot.SpringApplication; import org.springframework.boot.autoconfigure.SpringBootApplication; @SpringBootApplication @MapperScan(\"org.example.mapper\") public class Application { public static void main(String[] args) { SpringApplication.run(Application.class, args); } } 新建一个Student类，通过Navicat的设计表查看（也可以在cmd中输入命令”desc+表名”查看）有哪些属性，类型需要一一匹配。通过lombok可以帮助我们快速生成构造方法、toString方法等等。 package org.example.pojo; import lombok.Data; @Data public class Student { private Long id; private String date; private String content; private Integer num1; private Integer num2; private Integer num3; private Integer num4; } 在mapper包下创建一个StudentMapper接口 package org.example.mapper; import com.baomidou.mybatisplus.core.mapper.BaseMapper; import org.example.pojo.Student; public interface StudentMapper extends BaseMapper&lt;Student&gt; { } 创建Controller类配置路由规则，Gson可以将查出来的数据转成字符串，这个时候会有警告，在上方加上@SuppressWarnings(“all”) package org.example; import com.google.gson.Gson; import org.example.mapper.StudentMapper; import org.example.pojo.Student; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.web.bind.annotation.*; import java.util.List; @RestController @SuppressWarnings(\"all\") @CrossOrigin(origins = {\"*\", \"null\"}) public class Controller { @Autowired private StudentMapper studentMapper; private Gson gson=new Gson(); @GetMapping(\"/students\") public String getStudents(){ List&lt;Student&gt; students = studentMapper.selectList(null); return gson.toJson(students); } @PostMapping(\"/add\") public void addStudent(@RequestBody Student student){ studentMapper.insert(student); } @PostMapping(\"delete\") public void removeStudent(@RequestBody Student student){ studentMapper.deleteById(student); } @PostMapping(\"update\") public void updateStudent(@RequestBody Student student){ studentMapper.updateById(student); } } (以下都是零碎的知识点记录，我会在考完后的6月25日晚整理好后更新的，图片未上传图床所以没有加载出来，)输入命令cd . 用vscode打开 会报错，需要在项目中打开 npm run serve 在浏览器中输入 localhost:8080 自带的组建中，我们进行一下修改 将它自带的都删掉， vue1. 在A组建中使用B组建import B from \"./B.vue\" 2.可以用&lt; /&gt;代替成对标签3. 通过data(){return }的方式传输数据常用指令vue create + 名称 npm i hexo-cli -g 一些代码v-for v-show 需要注意的几点需要多单词驼峰命名 @click需要加@ methods不要忘记加s return中的用逗号隔开 冒号前需要有空格 一些小插曲 npm i hexo-cli -g 由npm安装 箭头函数 如果使用了this，不会指向当前对象本身，而是指向外面的 axios本身就是函数 alert() 警告消息框 该消息框提供了一个“确定”按钮让用户关闭该消息框 confirm() 确认消息框 使用确认消息框可向用户问一个“是-或-否”问题，并且用户可以选择单击“确定”按钮或者单击“取消”按钮 prompt() 提示消息框 提示消息框提供了一个文本字段，用户可以在此字段输入一个答案来响应您的提示 通过lombok生成方法，tostring等等 add是大括号{} npm i axios npm i bootstrap@5.2.0-beta1 https://getbootstrap.com/docs/5.2/content/tables/ npm i element-ui","categories":[{"name":"期末作业","slug":"期末作业","permalink":"https://liuyu.biz/categories/%E6%9C%9F%E6%9C%AB%E4%BD%9C%E4%B8%9A/"}],"tags":[]},{"title":"STL的个人总结","slug":"test","date":"2022-01-16T15:01:40.000Z","updated":"2022-06-14T19:26:27.252Z","comments":true,"path":"posts/d87f7e0c.html","link":"","permalink":"https://liuyu.biz/posts/d87f7e0c.html","excerpt":"","text":"algorithm库函数1.reverse 翻转(a.begin(),a.end()) reverse(a,a+n) 举个栗子 #include &lt;iostream&gt; #include &lt;algorithm&gt; #include &lt;vector&gt; using namespace std; int main() { vector&lt;int&gt;a({1,2,3,4,5}); reverse(a.begin(),a.end()); for(auto x:a) cout &lt;&lt; x &lt;&lt;' '; return 0; } 2.unique 去重 需要保证相同元素在一起才行，个人建议先sort m=unique(begin,end)-begin //m为不重复的个数或者a.erase(unique(begin,end),end)举个栗子 #include &lt;iostream&gt; #include &lt;algorithm&gt; #include &lt;vector&gt; using namespace std; int main() { vector&lt;int&gt;a({1,2,2,3,3,4,4,4});//vector赋初值时不要等号 int m=unique(a.begin(),a.end())-a.begin(); cout &lt;&lt; m &lt;&lt;endl; for(int i=0;i&lt;m;i++) cout &lt;&lt; a[i]&lt;&lt;' '; return 0; } #include &lt;iostream&gt; #include &lt;algorithm&gt; #include &lt;vector&gt; using namespace std; int main() { vector&lt;int&gt;a({1,2,2,3,3,4,4,4});//vector赋初值时不要等号 a.erase(unique(a.begin(),a.end()),a.end()); for(auto x:a) cout &lt;&lt; x &lt;&lt;' '; return 0; } 3.random_shuffle 随机打乱用法同reverse注：可通过更改随机种子，让随机数变得不同 include &lt;ctime&gt; scand(time(0)); 4.sort 排序默认从小到大排序如果需要从大到小排序，那么可以加个greater&lt;int&gt;() 或者自写cmp函数举个栗子 #include &lt;iostream&gt; #include &lt;cstring&gt; #include &lt;algorithm&gt; using namespace std; int main() { vector&lt;int&gt;a({1,3,2,5,2}); sort(a.begin(),a.end(),greater&lt;int&gt;()); for(auto x:a) cout &lt;&lt; x &lt;&lt;' '; return 0; } 给结构体排序：1.重载小于号 struct Rec { int x,y; bool operator&lt;(const Rec &amp;t)const { return x&lt;t.x;//t是什么?例如a[0]与a[1]比较,t就是a[1] }a[N]; } 2.cmp函数 bool cmp(Rec a, Rec b) { return a.x &lt; b.x; } 5.lower_bound/upper_bound 二分，区别在于后者无等于int *p=lower_bound(begin,end,a);//*p为大于等于a的第一个元素int t=lower_bound(begin,end,a)-begin;//*p为大于等于a的第一个元素的下标 其它注意：queue不能随机遍历 最后：部分例题68. 0到n-1中缺失的数字 class Solution { public: int getMissingNumber(vector&lt;int&gt;&amp; nums) { unordered_set&lt;int&gt; S; //将所有可能的数字都放进哈希表 for(int i=0;i&lt;=nums.size();i++) S.insert(i); //将已有的删掉，剩下的那个数字就是需要补充的 for(auto x:nums) S.erase(x); return *S.begin(); } }; 32. 调整数组顺序使奇数位于偶数前面 class Solution { public: void reOrderArray(vector&lt;int&gt; &amp;array) { /*思路：让i指针遍历的都为奇数，j指针遍历的都为偶数 i:若为奇数那么就一直往后走;j:若为偶数那么就一直往前走 当两个奇数都不能走的时候就说明i指向偶数，j指向奇数，此时交换两个指针 这个过程一直到i与j相遇或者错开时停下 */ int i = 0, j = array.size() - 1; while(i &lt; j) { while(i &lt; j &amp;&amp; array[i] % 2) i++; while(i &lt; j &amp;&amp; array[j] % 2 == 0) j--; if(i &lt; j) swap(array[i], array[j]); } } }; 17. 从尾到头打印链表 /** * Definition for singly-linked list. * struct ListNode { * int val; * ListNode *next; * ListNode(int x) : val(x), next(NULL) {} * }; */ class Solution { public: vector&lt;int&gt; printListReversingly(ListNode* head) { vector&lt;int&gt;res; for(auto p = head; p; p = p-&gt;next) res.push_back(p-&gt;val); reverse(res.begin(), res.end()); return res; } }; 20. 用两个栈实现队列 /*例如搬书，自己手上有几十本书，需要将最底下那本抽出来。 于是，我们可以找个工具人，将除了最底下的那本都一本一本甩给他。 最后抽出那本书后，再让他把他手上的书按顺序给我。 */ class MyQueue { public: /** Initialize your data structure here. */ stack&lt;int&gt; s1, s2; MyQueue() { } /** Push element x to the back of queue. */ void push(int x) { s1.push(x); } /** Removes the element from in front of queue and returns that element. */ int pop() { while(s1.size()&gt;1) s2.push(s1.top()),s1.pop();//把书都甩给工具人，自己只拿一本书 int t = s1.top(); s1.pop(); while(s2.size()) s1.push(s2.top()),s2.pop();//那本书被取出来了，让工具人把书还给我，不需要他了，赶他下线 return t; } /** Get the front element. */ int peek() { while(s1.size()&gt;1) s2.push(s1.top()),s1.pop();//把书都甩给工具人，自己只拿一本书 int t = s1.top(); while(s2.size()) s1.push(s2.top()),s2.pop();//那本书被取出来了，让工具人把书还给我，不需要他了，赶他下线 return t; } /** Returns whether the queue is empty. */ bool empty() { return s1.empty(); } }; /** * Your MyQueue object will be instantiated and called as such: * MyQueue obj = MyQueue(); * obj.push(x); * int param_2 = obj.pop(); * int param_3 = obj.peek(); * bool param_4 = obj.empty(); */ 53. 最小的k个数 class Solution { public: vector&lt;int&gt; getLeastNumbers_Solution(vector&lt;int&gt; input, int k) { sort(input.begin(), input.end()); vector&lt;int&gt;res; for (int i = 0; i &lt; k; i ++ ) res.push_back(input[i]); return res; } }; 75. 和为S的两个数字 /*在哈希表查看有没有可以凑成一对的那个数字*/ class Solution { public: vector&lt;int&gt; findNumbersWithSum(vector&lt;int&gt;&amp; nums, int target) { unordered_set&lt;int&gt;S; for(auto x:nums) { if(S.count(target-x)) return {x,target-x};//用count函数 S.insert(x); } } }; 51. 数字排列 class Solution { public: vector&lt;vector&lt;int&gt;&gt; permutation(vector&lt;int&gt;&amp; nums) { //先排序之后才能使用next_permutation(begin,end) sort(nums.begin(),nums.end()); vector&lt;vector&lt;int&gt;&gt;res; do{ res.push_back(nums); }while(next_permutation(nums.begin(),nums.end())); return res; } }; 26. 二进制中1的个数 class Solution { public: int NumberOf1(int n) { int res = 0; for (int i = 0; i &lt; 32; i++) if (n &gt;&gt; i &amp; 1) res++; return res; } }; 862. 三元组排序 #include &lt;iostream&gt; #include &lt;algorithm&gt; using namespace std; const int N = 10010; struct Data { int x; double y; string z; bool operator&lt; (const Data &amp;t) const { return x &lt; t.x; } }a[N]; int main() { int n; cin &gt;&gt; n; for (int i = 0; i &lt; n; i ++ ) cin &gt;&gt; a[i].x &gt;&gt;a[i].y &gt;&gt; a[i].z; sort(a, a+n); //printf输出字符串需要加.c_str()) for (int i = 0; i &lt; n; i ++ ) printf(\"%d %.2lf %s\\n\",a[i].x,a[i].y,a[i].z.c_str()); return 0; }","categories":[],"tags":[]}],"categories":[{"name":"个人学习","slug":"个人学习","permalink":"https://liuyu.biz/categories/%E4%B8%AA%E4%BA%BA%E5%AD%A6%E4%B9%A0/"},{"name":"期末作业","slug":"期末作业","permalink":"https://liuyu.biz/categories/%E6%9C%9F%E6%9C%AB%E4%BD%9C%E4%B8%9A/"}],"tags":[{"name":"SpringBoot","slug":"SpringBoot","permalink":"https://liuyu.biz/tags/SpringBoot/"},{"name":"VUE","slug":"VUE","permalink":"https://liuyu.biz/tags/VUE/"}]}